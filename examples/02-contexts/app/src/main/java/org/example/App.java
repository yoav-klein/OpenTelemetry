/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;
import io.opentelemetry.api.OpenTelemetry;
import io.opentelemetry.api.trace.Span;
import io.opentelemetry.api.trace.Tracer;
import io.opentelemetry.api.trace.StatusCode;

import io.opentelemetry.context.Context;
import io.opentelemetry.context.ContextKey;
import io.opentelemetry.context.Scope;

import io.opentelemetry.api.OpenTelemetry;

import java.util.logging.Level;
import java.util.logging.Logger;

public class App {
    
    public static void main(String[] args) {

        contexts();   
    }

    public static void contexts() {
        // ContextKey is used as keys in Context objects
        ContextKey<String> key1 = ContextKey.named("key1");
        ContextKey<String> key2 = ContextKey.named("key2");
        
        // get the current context
        Context current = Context.current();
        
        // a Context is immutable, so adding key-value pairs to a Context creates new Context
        Context newContext = context.with(key1, "value1").with(key2, "value2");
        System.out.println(newContext.get(key1));
        System.out.println(newContext.get(key2));

        // the current context did not change, this will produce null
        // again, becasue Context is immutable
        System.out.println(current.get(key1));
        
        // let's make our newContext the current context
        try (Scope scope = newContext.makeCurrent()) {
            System.out.println("context value: " + Context.current().get(key1));
        }
        
        // after the makeCurrent scope, we're back in the original scope
        // so this will be null again:
        System.out.println(current.get(key1));
    }

}




